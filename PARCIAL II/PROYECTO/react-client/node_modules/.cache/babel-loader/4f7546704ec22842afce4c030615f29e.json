{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\Distribuidas\\\\Distribuidas\\\\PARCIAL II\\\\PROYECTO\\\\react-client\\\\src\\\\components\\\\ChatRoomUI.js\";\nimport React from 'react';\nimport '../index.css';\n/*\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser\r\n}) => {\r\n  // Maneja el evento de teclado\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n        sendValue(); \r\n      } else {\r\n        sendPrivateValue(); \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li onClick={() => { setTab(\"CHATROOM\") }} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>CHAT4FUN</li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li onClick={() => { setTab(name) }} className={`member ${tab === name && \"active\"}`} key={index}>{name}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} // Asocia el evento de teclado\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"re\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          <div className=\"register\">\r\n            <input\r\n              id=\"user-name\"\r\n              placeholder=\"Ingresa tu nombre\"\r\n              name=\"userName\"\r\n              value={userData.username}\r\n              onChange={handleUsername}\r\n              margin=\"normal\"\r\n              \r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"button\" id=\"btn-registro\" onClick={registerUser} >\r\n            Entrar\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*#__PURE__*/\n_jsxDEV(\"div\", {\n  className: \"member-list\",\n  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => {\n        handleTabChange(\"CHATROOM\");\n      },\n      className: `member ${tab === \"CHATROOM\" && \"active\"}`,\n      children: \"CHAT4FUN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), [...privateChats.keys()].map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => {\n        handleTabChange(name);\n      },\n      className: `member ${tab === name && \"active\"}`,\n      children: [name, \" \", newMessagesCount.get(name) > 0 && `(${newMessagesCount.get(name)})`]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 112,\n  columnNumber: 1\n}, this);","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/Distribuidas/Distribuidas/PARCIAL II/PROYECTO/react-client/src/components/ChatRoomUI.js"],"names":["React","handleTabChange","tab","privateChats","keys","map","name","index","newMessagesCount","get"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,caAAf;AAAA,yBACI;AAAA,4BACI;AAAI,MAAA,OAAO,EAAE,MAAM;AAAEC,QAAAA,eAAe,CAAC,UAAD,CAAf;AAA6B,OAAlD;AAAoD,MAAA,SAAS,EAAG,UAASC,GAAG,KAAK,UAAR,IAAsB,QAAS,EAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,CAAC,GAAGC,YAAY,CAACC,IAAb,EAAJ,EAAyBC,GAAzB,CAA6B,CAACC,IAAD,EAAOC,KAAP,kBAC1B;AAAI,MAAA,OAAO,EAAE,MAAM;AAAEN,QAAAA,eAAe,CAACK,IAAD,CAAf;AAAuB,OAA5C;AAA8C,MAAA,SAAS,EAAG,UAASJ,GAAG,KAAKI,IAAR,IAAgB,QAAS,EAA5F;AAAA,iBACKA,IADL,OACYE,gBAAgB,CAACC,GAAjB,CAAqBH,IAArB,IAA6B,CAA7B,IAAmC,IAAGE,gBAAgB,CAACC,GAAjB,CAAqBH,IAArB,CAA2B,GAD7E;AAAA,OAAoGC,KAApG;AAAA;AAAA;AAAA;AAAA,YADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React from 'react';\r\nimport '../index.css';\r\n/*\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser\r\n}) => {\r\n  // Maneja el evento de teclado\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n        sendValue(); \r\n      } else {\r\n        sendPrivateValue(); \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li onClick={() => { setTab(\"CHATROOM\") }} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>CHAT4FUN</li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li onClick={() => { setTab(name) }} className={`member ${tab === name && \"active\"}`} key={index}>{name}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} // Asocia el evento de teclado\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"re\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          <div className=\"register\">\r\n            <input\r\n              id=\"user-name\"\r\n              placeholder=\"Ingresa tu nombre\"\r\n              name=\"userName\"\r\n              value={userData.username}\r\n              onChange={handleUsername}\r\n              margin=\"normal\"\r\n              \r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"button\" id=\"btn-registro\" onClick={registerUser} >\r\n            Entrar\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;\r\n*/\r\n\r\n<div className=\"member-list\">\r\n    <ul>\r\n        <li onClick={() => { handleTabChange(\"CHATROOM\") }} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>CHAT4FUN</li>\r\n        {[...privateChats.keys()].map((name, index) => (\r\n            <li onClick={() => { handleTabChange(name) }} className={`member ${tab === name && \"active\"}`} key={index}>\r\n                {name} {newMessagesCount.get(name) > 0 && `(${newMessagesCount.get(name)})`}\r\n            </li>\r\n        ))}\r\n    </ul>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}