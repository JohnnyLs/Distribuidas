{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\Distribuidas\\\\Distribuidas\\\\PARCIAL II\\\\PROYECTO\\\\react-client\\\\src\\\\components\\\\ChatRoomUI.js\";\n// import React from 'react';\n// import '../index.css';\n// const ChatRoomUI = ({\n//   userData,\n//   privateChats,\n//   publicChats,\n//   tab,\n//   setTab,\n//   handleMessage,\n//   sendValue,\n//   sendPrivateValue,\n//   handleUsername,\n//   registerUser\n// }) => {\n//   // Maneja el evento de teclado\n//   const handleKeyDown = (event) => {\n//     if (event.key === 'Enter') {\n//       event.preventDefault(); \n//         sendValue(); \n//       } else {\n//         sendPrivateValue(); \n//     }\n//   };\n//   return (\n//     <div className=\"container\">\n//       {userData.connected ? (\n//         <div className=\"chat-box\">\n//           <div className=\"member-list\">\n//             <ul>\n//               <li onClick={() => { setTab(\"CHATROOM\") }} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>CHAT4FUN</li>\n//               {[...privateChats.keys()].map((name, index) => (\n//                 <li onClick={() => { setTab(name) }} className={`member ${tab === name && \"active\"}`} key={index}>{name}</li>\n//               ))}\n//             </ul>\n//           </div>\n//           {tab === \"CHATROOM\" && <div className=\"chat-content\">\n//             <ul className=\"chat-messages\">\n//               {publicChats.map((chat, index) => (\n//                 <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\n//                   <div className=\"sender-name\">{chat.senderName}</div>\n//                   <div className=\"message-data\">{chat.message}</div>\n//                 </li>\n//               ))}\n//             </ul>\n//             <div className=\"send-message\">\n//               <input\n//                 type=\"text\"\n//                 className=\"input-message\"\n//                 placeholder=\"Escribe un mensaje\"\n//                 value={userData.message}\n//                 onChange={handleMessage}\n//                 onKeyDown={handleKeyDown} \n//                 required\n//               />\n//               <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\n//             </div>\n//           </div>}\n//           {tab !== \"CHATROOM\" && <div className=\"chat-content\">\n//             <ul className=\"chat-messages\">\n//               {[...privateChats.get(tab)].map((chat, index) => (\n//                 <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\n//                   <div className=\"sender-name\">{chat.senderName}</div>\n//                   <div className=\"message-data\">{chat.message}</div>\n//                 </li>\n//               ))}\n//             </ul>\n//             <div className=\"send-message\">\n//               <input\n//                 type=\"text\"\n//                 className=\"input-message\"\n//                 placeholder=\"Escribe un mensaje\"\n//                 value={userData.message}\n//                 onChange={handleMessage}\n//                 onKeyDown={handleKeyDown} // Asocia el evento de teclado\n//                 required\n//               />\n//               <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\n//             </div>\n//           </div>}\n//         </div>\n//       ) : (\n//         <div className=\"re\">\n//           <h1>Bienvenido a CHAT4FUN</h1>\n//           <div className=\"register\">\n//             <input\n//               id=\"user-name\"\n//               placeholder=\"Ingresa tu nombre\"\n//               name=\"userName\"\n//               value={userData.username}\n//               onChange={handleUsername}\n//               margin=\"normal\"\n//               required\n//             />\n//           </div>\n//           <button type=\"button\" id=\"btn-registro\" onClick={registerUser} >\n//             Entrar\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n// export default ChatRoomUI;\n\n/*\r\nimport React from 'react';\r\nimport '../index.css';\r\n\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser,\r\n  unreadMessages,\r\n  //setUnreadMessages\r\n}) => {\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n      tab === \"CHATROOM\" ? sendValue() : sendPrivateValue();\r\n    }\r\n  };\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li \r\n                onClick={() => setTab(\"CHATROOM\")} \r\n                className={`member ${tab === \"CHATROOM\" && \"active\"}`}\r\n              >\r\n                CHAT4FUN\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li \r\n                  onClick={() => setTab(name)} \r\n                  className={`member ${tab === name && \"active\"} ${unreadMessages.get(name) ? \"unread\" : \"\"}`} \r\n                  key={index}\r\n                >\r\n                  {name} {unreadMessages.get(name) ? `(${unreadMessages.get(name)}) Nuevo Mensaje` : ''}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown}\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"re\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          <div className=\"register\">\r\n            <input\r\n              id=\"user-name\"\r\n              placeholder=\"Ingresa tu nombre\"\r\n              name=\"userName\"\r\n              value={userData.username}\r\n              onChange={handleUsername}\r\n              margin=\"normal\"\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"button\" id=\"btn-registro\" onClick={registerUser}>\r\n            Entrar\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;\r\n*/\n\n/* \r\nimport React from 'react';\r\nimport '../index.css';\r\n\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser,\r\n  unreadMessages,\r\n}) => {\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n      tab === \"CHATROOM\" ? sendValue() : sendPrivateValue();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li \r\n                onClick={() => setTab(\"CHATROOM\")} \r\n                className={`member ${tab === \"CHATROOM\" && \"active\"}`}\r\n              >\r\n                CHAT4FUN\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li \r\n                  onClick={() => setTab(name)} \r\n                  className={`member ${tab === name && \"active\"} ${unreadMessages.get(name) ? \"unread\" : \"\"}`} \r\n                  key={index}\r\n                >\r\n                  {name} {unreadMessages.get(name) ? `(${unreadMessages.get(name)}) Nuevo Mensaje` : ''}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown}\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"re\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          <div className=\"register\">\r\n            <input\r\n              id=\"user-name\"\r\n              placeholder=\"Ingresa tu nombre\"\r\n              name=\"userName\"\r\n              value={userData.username}\r\n              onChange={handleUsername}\r\n              margin=\"normal\"\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"button\" id=\"btn-registro\" onClick={registerUser}>\r\n            Entrar\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;\r\n */\n\n/* \r\nimport React from 'react';\r\nimport '../index.css';\r\n\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser,\r\n  loginUser,\r\n  unreadMessages,\r\n  isRegistering,\r\n  setIsRegistering,\r\n}) => {\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n      tab === \"CHATROOM\" ? sendValue() : sendPrivateValue();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li \r\n                onClick={() => setTab(\"CHATROOM\")} \r\n                className={`member ${tab === \"CHATROOM\" && \"active\"}`}\r\n              >\r\n                CHAT4FUN\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li \r\n                  onClick={() => setTab(name)} \r\n                  className={`member ${tab === name && \"active\"} ${unreadMessages.get(name) ? \"unread\" : \"\"}`} \r\n                  key={index}\r\n                >\r\n                  {name} {unreadMessages.get(name) ? `(${unreadMessages.get(name)}) Nuevo Mensaje` : ''}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown}\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"register\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          {userData.errors && Object.keys(userData.errors).length > 0 && (\r\n            <div className=\"error-messages\">\r\n              {Object.values(userData.errors).map((error, index) => (\r\n                <p key={index} className=\"error\">{error}</p>\r\n              ))}\r\n            </div>\r\n          )}\r\n          {isRegistering ? (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Usuario\"\r\n                name=\"username\"\r\n                value={userData.username}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"password\"\r\n                value={userData.password}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                value={userData.email}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <button type=\"button\" onClick={registerUser}>Registrarse</button>\r\n              <p>¿Ya tienes una cuenta? <span onClick={() => setIsRegistering(false)}>Iniciar sesión</span></p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Usuario\"\r\n                name=\"username\"\r\n                value={userData.username}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"password\"\r\n                value={userData.password}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n       \r\n              <button type=\"button\" onClick={loginUser}>Iniciar sesión</button>\r\n              <p>¿No tienes una cuenta? <span onClick={() => setIsRegistering(true)}>Registrarse</span></p>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;\r\n\r\n\r\n */\nimport React from 'react';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatRoomUI = _ref => {\n  let {\n    userData,\n    privateChats,\n    publicChats,\n    tab,\n    setTab,\n    handleMessage,\n    sendValue,\n    sendPrivateValue,\n    handleUsername,\n    registerUser,\n    loginUser,\n    unreadMessages,\n    isRegistering,\n    setIsRegistering,\n    handleSearch,\n    filteredUserList\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isRegistering ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: userData.username,\n          onChange: handleUsername,\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: userData.password,\n          onChange: handleUsername,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: userData.email,\n          onChange: handleUsername,\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: registerUser,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRegistering(false),\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: userData.username,\n          onChange: handleUsername,\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: userData.password,\n          onChange: handleUsername,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loginUser,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRegistering(true),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userData.searchQuery,\n        onChange: handleSearch,\n        placeholder: \"Search users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filteredUserList.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setTab(user.username),\n          children: [user.username, \" \", unreadMessages.get(user.username) > 0 && `(${unreadMessages.get(user.username)})`]\n        }, user.username, true, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tab === \"CHATROOM\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [chat.senderName, \": \", chat.message]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userData.message,\n            onChange: handleMessage,\n            placeholder: \"Type a message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendValue,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [privateChats.get(tab) && privateChats.get(tab).map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [chat.senderName, \": \", chat.message]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userData.message,\n            onChange: handleMessage,\n            placeholder: \"Type a message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendPrivateValue,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 548,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChatRoomUI;\nexport default ChatRoomUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoomUI\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/Distribuidas/Distribuidas/PARCIAL II/PROYECTO/react-client/src/components/ChatRoomUI.js"],"names":["React","ChatRoomUI","userData","privateChats","publicChats","tab","setTab","handleMessage","sendValue","sendPrivateValue","handleUsername","registerUser","loginUser","unreadMessages","isRegistering","setIsRegistering","handleSearch","filteredUserList","connected","username","password","email","searchQuery","map","user","get","chat","index","senderName","message"],"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","sourcesContent":["// import React from 'react';\r\n// import '../index.css';\r\n\r\n// const ChatRoomUI = ({\r\n//   userData,\r\n//   privateChats,\r\n//   publicChats,\r\n//   tab,\r\n//   setTab,\r\n//   handleMessage,\r\n//   sendValue,\r\n//   sendPrivateValue,\r\n//   handleUsername,\r\n//   registerUser\r\n// }) => {\r\n//   // Maneja el evento de teclado\r\n//   const handleKeyDown = (event) => {\r\n//     if (event.key === 'Enter') {\r\n//       event.preventDefault(); \r\n//         sendValue(); \r\n//       } else {\r\n//         sendPrivateValue(); \r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       {userData.connected ? (\r\n//         <div className=\"chat-box\">\r\n//           <div className=\"member-list\">\r\n//             <ul>\r\n//               <li onClick={() => { setTab(\"CHATROOM\") }} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>CHAT4FUN</li>\r\n//               {[...privateChats.keys()].map((name, index) => (\r\n//                 <li onClick={() => { setTab(name) }} className={`member ${tab === name && \"active\"}`} key={index}>{name}</li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//           {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n//             <ul className=\"chat-messages\">\r\n//               {publicChats.map((chat, index) => (\r\n//                 <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n//                   <div className=\"sender-name\">{chat.senderName}</div>\r\n//                   <div className=\"message-data\">{chat.message}</div>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n\r\n//             <div className=\"send-message\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"input-message\"\r\n//                 placeholder=\"Escribe un mensaje\"\r\n//                 value={userData.message}\r\n//                 onChange={handleMessage}\r\n//                 onKeyDown={handleKeyDown} \r\n//                 required\r\n//               />\r\n//               <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n//             </div>\r\n//           </div>}\r\n//           {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n//             <ul className=\"chat-messages\">\r\n//               {[...privateChats.get(tab)].map((chat, index) => (\r\n//                 <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n//                   <div className=\"sender-name\">{chat.senderName}</div>\r\n//                   <div className=\"message-data\">{chat.message}</div>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n\r\n//             <div className=\"send-message\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"input-message\"\r\n//                 placeholder=\"Escribe un mensaje\"\r\n//                 value={userData.message}\r\n//                 onChange={handleMessage}\r\n//                 onKeyDown={handleKeyDown} // Asocia el evento de teclado\r\n//                 required\r\n//               />\r\n//               <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n//             </div>\r\n//           </div>}\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"re\">\r\n//           <h1>Bienvenido a CHAT4FUN</h1>\r\n//           <div className=\"register\">\r\n//             <input\r\n//               id=\"user-name\"\r\n//               placeholder=\"Ingresa tu nombre\"\r\n//               name=\"userName\"\r\n//               value={userData.username}\r\n//               onChange={handleUsername}\r\n//               margin=\"normal\"\r\n              \r\n//               required\r\n//             />\r\n//           </div>\r\n//           <button type=\"button\" id=\"btn-registro\" onClick={registerUser} >\r\n//             Entrar\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ChatRoomUI;\r\n\r\n/*\r\nimport React from 'react';\r\nimport '../index.css';\r\n\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser,\r\n  unreadMessages,\r\n  //setUnreadMessages\r\n}) => {\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n      tab === \"CHATROOM\" ? sendValue() : sendPrivateValue();\r\n    }\r\n  };\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li \r\n                onClick={() => setTab(\"CHATROOM\")} \r\n                className={`member ${tab === \"CHATROOM\" && \"active\"}`}\r\n              >\r\n                CHAT4FUN\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li \r\n                  onClick={() => setTab(name)} \r\n                  className={`member ${tab === name && \"active\"} ${unreadMessages.get(name) ? \"unread\" : \"\"}`} \r\n                  key={index}\r\n                >\r\n                  {name} {unreadMessages.get(name) ? `(${unreadMessages.get(name)}) Nuevo Mensaje` : ''}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown}\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"re\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          <div className=\"register\">\r\n            <input\r\n              id=\"user-name\"\r\n              placeholder=\"Ingresa tu nombre\"\r\n              name=\"userName\"\r\n              value={userData.username}\r\n              onChange={handleUsername}\r\n              margin=\"normal\"\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"button\" id=\"btn-registro\" onClick={registerUser}>\r\n            Entrar\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;\r\n*/\r\n/* \r\nimport React from 'react';\r\nimport '../index.css';\r\n\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser,\r\n  unreadMessages,\r\n}) => {\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n      tab === \"CHATROOM\" ? sendValue() : sendPrivateValue();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li \r\n                onClick={() => setTab(\"CHATROOM\")} \r\n                className={`member ${tab === \"CHATROOM\" && \"active\"}`}\r\n              >\r\n                CHAT4FUN\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li \r\n                  onClick={() => setTab(name)} \r\n                  className={`member ${tab === name && \"active\"} ${unreadMessages.get(name) ? \"unread\" : \"\"}`} \r\n                  key={index}\r\n                >\r\n                  {name} {unreadMessages.get(name) ? `(${unreadMessages.get(name)}) Nuevo Mensaje` : ''}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown}\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"re\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          <div className=\"register\">\r\n            <input\r\n              id=\"user-name\"\r\n              placeholder=\"Ingresa tu nombre\"\r\n              name=\"userName\"\r\n              value={userData.username}\r\n              onChange={handleUsername}\r\n              margin=\"normal\"\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"button\" id=\"btn-registro\" onClick={registerUser}>\r\n            Entrar\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;\r\n */\r\n\r\n/* \r\nimport React from 'react';\r\nimport '../index.css';\r\n\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser,\r\n  loginUser,\r\n  unreadMessages,\r\n  isRegistering,\r\n  setIsRegistering,\r\n}) => {\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n      tab === \"CHATROOM\" ? sendValue() : sendPrivateValue();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li \r\n                onClick={() => setTab(\"CHATROOM\")} \r\n                className={`member ${tab === \"CHATROOM\" && \"active\"}`}\r\n              >\r\n                CHAT4FUN\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li \r\n                  onClick={() => setTab(name)} \r\n                  className={`member ${tab === name && \"active\"} ${unreadMessages.get(name) ? \"unread\" : \"\"}`} \r\n                  key={index}\r\n                >\r\n                  {name} {unreadMessages.get(name) ? `(${unreadMessages.get(name)}) Nuevo Mensaje` : ''}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown}\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"register\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          {userData.errors && Object.keys(userData.errors).length > 0 && (\r\n            <div className=\"error-messages\">\r\n              {Object.values(userData.errors).map((error, index) => (\r\n                <p key={index} className=\"error\">{error}</p>\r\n              ))}\r\n            </div>\r\n          )}\r\n          {isRegistering ? (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Usuario\"\r\n                name=\"username\"\r\n                value={userData.username}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"password\"\r\n                value={userData.password}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                value={userData.email}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <button type=\"button\" onClick={registerUser}>Registrarse</button>\r\n              <p>¿Ya tienes una cuenta? <span onClick={() => setIsRegistering(false)}>Iniciar sesión</span></p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Usuario\"\r\n                name=\"username\"\r\n                value={userData.username}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"password\"\r\n                value={userData.password}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n       \r\n              <button type=\"button\" onClick={loginUser}>Iniciar sesión</button>\r\n              <p>¿No tienes una cuenta? <span onClick={() => setIsRegistering(true)}>Registrarse</span></p>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;\r\n\r\n\r\n */\r\n\r\n\r\nimport React from 'react';\r\nimport '../index.css';\r\n\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser,\r\n  loginUser,\r\n  unreadMessages,\r\n  isRegistering,\r\n  setIsRegistering,\r\n  handleSearch,\r\n  filteredUserList\r\n}) => {\r\n  return (\r\n    <div>\r\n      {!userData.connected ? (\r\n        <div>\r\n          {isRegistering ? (\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={userData.username}\r\n                onChange={handleUsername}\r\n                placeholder=\"Username\"\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={userData.password}\r\n                onChange={handleUsername}\r\n                placeholder=\"Password\"\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={userData.email}\r\n                onChange={handleUsername}\r\n                placeholder=\"Email\"\r\n              />\r\n              <button onClick={registerUser}>Register</button>\r\n              <button onClick={() => setIsRegistering(false)}>Back to Login</button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={userData.username}\r\n                onChange={handleUsername}\r\n                placeholder=\"Username\"\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={userData.password}\r\n                onChange={handleUsername}\r\n                placeholder=\"Password\"\r\n              />\r\n              <button onClick={loginUser}>Login</button>\r\n              <button onClick={() => setIsRegistering(true)}>Register</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={userData.searchQuery}\r\n            onChange={handleSearch}\r\n            placeholder=\"Search users\"\r\n          />\r\n          <div>\r\n            {filteredUserList.map(user => (\r\n              <div key={user.username} onClick={() => setTab(user.username)}>\r\n                {user.username} {unreadMessages.get(user.username) > 0 && `(${unreadMessages.get(user.username)})`}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div>\r\n            {tab === \"CHATROOM\" ? (\r\n              <div>\r\n                {publicChats.map((chat, index) => (\r\n                  <div key={index}>\r\n                    {chat.senderName}: {chat.message}\r\n                  </div>\r\n                ))}\r\n                <input\r\n                  type=\"text\"\r\n                  value={userData.message}\r\n                  onChange={handleMessage}\r\n                  placeholder=\"Type a message\"\r\n                />\r\n                <button onClick={sendValue}>Send</button>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                {privateChats.get(tab) && privateChats.get(tab).map((chat, index) => (\r\n                  <div key={index}>\r\n                    {chat.senderName}: {chat.message}\r\n                  </div>\r\n                ))}\r\n                <input\r\n                  type=\"text\"\r\n                  value={userData.message}\r\n                  onChange={handleMessage}\r\n                  placeholder=\"Type a message\"\r\n                />\r\n                <button onClick={sendPrivateValue}>Send</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;\r\n"]},"metadata":{},"sourceType":"module"}