{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\Distribuidas\\\\Distribuidas\\\\PARCIAL II\\\\PROYECTO\\\\react-client\\\\src\\\\components\\\\ChatRoomUI.js\";\n// import React from 'react';\n// import '../index.css';\n// const ChatRoomUI = ({\n//   userData,\n//   privateChats,\n//   publicChats,\n//   tab,\n//   setTab,\n//   handleMessage,\n//   sendValue,\n//   sendPrivateValue,\n//   handleUsername,\n//   registerUser\n// }) => {\n//   // Maneja el evento de teclado\n//   const handleKeyDown = (event) => {\n//     if (event.key === 'Enter') {\n//       event.preventDefault(); \n//         sendValue(); \n//       } else {\n//         sendPrivateValue(); \n//     }\n//   };\n//   return (\n//     <div className=\"container\">\n//       {userData.connected ? (\n//         <div className=\"chat-box\">\n//           <div className=\"member-list\">\n//             <ul>\n//               <li onClick={() => { setTab(\"CHATROOM\") }} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>CHAT4FUN</li>\n//               {[...privateChats.keys()].map((name, index) => (\n//                 <li onClick={() => { setTab(name) }} className={`member ${tab === name && \"active\"}`} key={index}>{name}</li>\n//               ))}\n//             </ul>\n//           </div>\n//           {tab === \"CHATROOM\" && <div className=\"chat-content\">\n//             <ul className=\"chat-messages\">\n//               {publicChats.map((chat, index) => (\n//                 <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\n//                   <div className=\"sender-name\">{chat.senderName}</div>\n//                   <div className=\"message-data\">{chat.message}</div>\n//                 </li>\n//               ))}\n//             </ul>\n//             <div className=\"send-message\">\n//               <input\n//                 type=\"text\"\n//                 className=\"input-message\"\n//                 placeholder=\"Escribe un mensaje\"\n//                 value={userData.message}\n//                 onChange={handleMessage}\n//                 onKeyDown={handleKeyDown} \n//                 required\n//               />\n//               <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\n//             </div>\n//           </div>}\n//           {tab !== \"CHATROOM\" && <div className=\"chat-content\">\n//             <ul className=\"chat-messages\">\n//               {[...privateChats.get(tab)].map((chat, index) => (\n//                 <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\n//                   <div className=\"sender-name\">{chat.senderName}</div>\n//                   <div className=\"message-data\">{chat.message}</div>\n//                 </li>\n//               ))}\n//             </ul>\n//             <div className=\"send-message\">\n//               <input\n//                 type=\"text\"\n//                 className=\"input-message\"\n//                 placeholder=\"Escribe un mensaje\"\n//                 value={userData.message}\n//                 onChange={handleMessage}\n//                 onKeyDown={handleKeyDown} // Asocia el evento de teclado\n//                 required\n//               />\n//               <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\n//             </div>\n//           </div>}\n//         </div>\n//       ) : (\n//         <div className=\"re\">\n//           <h1>Bienvenido a CHAT4FUN</h1>\n//           <div className=\"register\">\n//             <input\n//               id=\"user-name\"\n//               placeholder=\"Ingresa tu nombre\"\n//               name=\"userName\"\n//               value={userData.username}\n//               onChange={handleUsername}\n//               margin=\"normal\"\n//               required\n//             />\n//           </div>\n//           <button type=\"button\" id=\"btn-registro\" onClick={registerUser} >\n//             Entrar\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n// export default ChatRoomUI;\n\n/*\r\nimport React from 'react';\r\nimport '../index.css';\r\n\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser,\r\n  unreadMessages,\r\n  //setUnreadMessages\r\n}) => {\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n      tab === \"CHATROOM\" ? sendValue() : sendPrivateValue();\r\n    }\r\n  };\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li \r\n                onClick={() => setTab(\"CHATROOM\")} \r\n                className={`member ${tab === \"CHATROOM\" && \"active\"}`}\r\n              >\r\n                CHAT4FUN\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li \r\n                  onClick={() => setTab(name)} \r\n                  className={`member ${tab === name && \"active\"} ${unreadMessages.get(name) ? \"unread\" : \"\"}`} \r\n                  key={index}\r\n                >\r\n                  {name} {unreadMessages.get(name) ? `(${unreadMessages.get(name)}) Nuevo Mensaje` : ''}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown}\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"re\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          <div className=\"register\">\r\n            <input\r\n              id=\"user-name\"\r\n              placeholder=\"Ingresa tu nombre\"\r\n              name=\"userName\"\r\n              value={userData.username}\r\n              onChange={handleUsername}\r\n              margin=\"normal\"\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"button\" id=\"btn-registro\" onClick={registerUser}>\r\n            Entrar\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;\r\n*/\nimport React from 'react';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatRoomUI = _ref => {\n  let {\n    userData,\n    privateChats,\n    publicChats,\n    tab,\n    setTab,\n    handleMessage,\n    sendValue,\n    sendPrivateValue,\n    handleUsername,\n    registerUser,\n    unreadMessages\n  } = _ref;\n\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      tab === \"CHATROOM\" ? sendValue() : sendPrivateValue();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setTab(\"CHATROOM\"),\n            className: `member ${tab === \"CHATROOM\" && \"active\"}`,\n            children: \"CHAT4FUN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), [...privateChats.keys()].map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setTab(name),\n            className: `member ${tab === name && \"active\"} ${unreadMessages.get(name) ? \"unread\" : \"\"}`,\n            children: [name, \" \", unreadMessages.get(name) ? `(${unreadMessages.get(name)}) Nuevo Mensaje` : '']\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username ? \"self\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sender-name\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"Escribe un mensaje\",\n            value: userData.message,\n            onChange: handleMessage,\n            onKeyDown: handleKeyDown,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 34\n      }, this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: [...privateChats.get(tab)].map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username ? \"self\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sender-name\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"Escribe un mensaje\",\n            value: userData.message,\n            onChange: handleMessage,\n            onKeyDown: handleKeyDown,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"re\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bienvenido a CHAT4FUN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"user-name\",\n          placeholder: \"Ingresa tu nombre\",\n          name: \"userName\",\n          value: userData.username,\n          onChange: handleUsername,\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"btn-registro\",\n        onClick: registerUser,\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChatRoomUI;\nexport default ChatRoomUI;\n/*\r\n\r\nimport React from 'react';\r\nimport '../index.css';\r\n\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser,\r\n  loginUser,\r\n  unreadMessages,\r\n  isRegistering,\r\n  setIsRegistering,\r\n}) => {\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n      tab === \"CHATROOM\" ? sendValue() : sendPrivateValue();\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li \r\n                onClick={() => setTab(\"CHATROOM\")} \r\n                className={`member ${tab === \"CHATROOM\" && \"active\"}`}\r\n              >\r\n                CHAT4FUN\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li \r\n                  onClick={() => setTab(name)} \r\n                  className={`member ${tab === name && \"active\"} ${unreadMessages.get(name) ? \"unread\" : \"\"}`} \r\n                  key={index}\r\n                >\r\n                  {name} {unreadMessages.get(name) ? `(${unreadMessages.get(name)}) Nuevo Mensaje` : ''}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown}\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"register\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          {isRegistering ? (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Usuario\"\r\n                name=\"username\"\r\n                value={userData.username}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"password\"\r\n                value={userData.password}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                value={userData.email}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <button type=\"button\" onClick={registerUser}>Registrarse</button>\r\n              <p>¿Ya tienes una cuenta? <span onClick={() => setIsRegistering(false)}>Iniciar sesión</span></p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Usuario\"\r\n                name=\"username\"\r\n                value={userData.username}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"password\"\r\n                value={userData.password}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <button type=\"button\" onClick={loginUser}>Iniciar sesión</button>\r\n              <p>¿No tienes una cuenta? <span onClick={() => setIsRegistering(true)}>Registrarse</span></p>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;*/\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoomUI\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/Distribuidas/Distribuidas/PARCIAL II/PROYECTO/react-client/src/components/ChatRoomUI.js"],"names":["React","ChatRoomUI","userData","privateChats","publicChats","tab","setTab","handleMessage","sendValue","sendPrivateValue","handleUsername","registerUser","unreadMessages","handleKeyDown","event","key","preventDefault","connected","keys","map","name","index","get","chat","senderName","username","message"],"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":["// import React from 'react';\r\n// import '../index.css';\r\n\r\n// const ChatRoomUI = ({\r\n//   userData,\r\n//   privateChats,\r\n//   publicChats,\r\n//   tab,\r\n//   setTab,\r\n//   handleMessage,\r\n//   sendValue,\r\n//   sendPrivateValue,\r\n//   handleUsername,\r\n//   registerUser\r\n// }) => {\r\n//   // Maneja el evento de teclado\r\n//   const handleKeyDown = (event) => {\r\n//     if (event.key === 'Enter') {\r\n//       event.preventDefault(); \r\n//         sendValue(); \r\n//       } else {\r\n//         sendPrivateValue(); \r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       {userData.connected ? (\r\n//         <div className=\"chat-box\">\r\n//           <div className=\"member-list\">\r\n//             <ul>\r\n//               <li onClick={() => { setTab(\"CHATROOM\") }} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>CHAT4FUN</li>\r\n//               {[...privateChats.keys()].map((name, index) => (\r\n//                 <li onClick={() => { setTab(name) }} className={`member ${tab === name && \"active\"}`} key={index}>{name}</li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//           {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n//             <ul className=\"chat-messages\">\r\n//               {publicChats.map((chat, index) => (\r\n//                 <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n//                   <div className=\"sender-name\">{chat.senderName}</div>\r\n//                   <div className=\"message-data\">{chat.message}</div>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n\r\n//             <div className=\"send-message\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"input-message\"\r\n//                 placeholder=\"Escribe un mensaje\"\r\n//                 value={userData.message}\r\n//                 onChange={handleMessage}\r\n//                 onKeyDown={handleKeyDown} \r\n//                 required\r\n//               />\r\n//               <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n//             </div>\r\n//           </div>}\r\n//           {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n//             <ul className=\"chat-messages\">\r\n//               {[...privateChats.get(tab)].map((chat, index) => (\r\n//                 <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n//                   <div className=\"sender-name\">{chat.senderName}</div>\r\n//                   <div className=\"message-data\">{chat.message}</div>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n\r\n//             <div className=\"send-message\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"input-message\"\r\n//                 placeholder=\"Escribe un mensaje\"\r\n//                 value={userData.message}\r\n//                 onChange={handleMessage}\r\n//                 onKeyDown={handleKeyDown} // Asocia el evento de teclado\r\n//                 required\r\n//               />\r\n//               <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n//             </div>\r\n//           </div>}\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"re\">\r\n//           <h1>Bienvenido a CHAT4FUN</h1>\r\n//           <div className=\"register\">\r\n//             <input\r\n//               id=\"user-name\"\r\n//               placeholder=\"Ingresa tu nombre\"\r\n//               name=\"userName\"\r\n//               value={userData.username}\r\n//               onChange={handleUsername}\r\n//               margin=\"normal\"\r\n              \r\n//               required\r\n//             />\r\n//           </div>\r\n//           <button type=\"button\" id=\"btn-registro\" onClick={registerUser} >\r\n//             Entrar\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ChatRoomUI;\r\n\r\n/*\r\nimport React from 'react';\r\nimport '../index.css';\r\n\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser,\r\n  unreadMessages,\r\n  //setUnreadMessages\r\n}) => {\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n      tab === \"CHATROOM\" ? sendValue() : sendPrivateValue();\r\n    }\r\n  };\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li \r\n                onClick={() => setTab(\"CHATROOM\")} \r\n                className={`member ${tab === \"CHATROOM\" && \"active\"}`}\r\n              >\r\n                CHAT4FUN\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li \r\n                  onClick={() => setTab(name)} \r\n                  className={`member ${tab === name && \"active\"} ${unreadMessages.get(name) ? \"unread\" : \"\"}`} \r\n                  key={index}\r\n                >\r\n                  {name} {unreadMessages.get(name) ? `(${unreadMessages.get(name)}) Nuevo Mensaje` : ''}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown}\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"re\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          <div className=\"register\">\r\n            <input\r\n              id=\"user-name\"\r\n              placeholder=\"Ingresa tu nombre\"\r\n              name=\"userName\"\r\n              value={userData.username}\r\n              onChange={handleUsername}\r\n              margin=\"normal\"\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"button\" id=\"btn-registro\" onClick={registerUser}>\r\n            Entrar\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;\r\n*/\r\n\r\nimport React from 'react';\r\nimport '../index.css';\r\n\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser,\r\n  unreadMessages,\r\n}) => {\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n      tab === \"CHATROOM\" ? sendValue() : sendPrivateValue();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li \r\n                onClick={() => setTab(\"CHATROOM\")} \r\n                className={`member ${tab === \"CHATROOM\" && \"active\"}`}\r\n              >\r\n                CHAT4FUN\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li \r\n                  onClick={() => setTab(name)} \r\n                  className={`member ${tab === name && \"active\"} ${unreadMessages.get(name) ? \"unread\" : \"\"}`} \r\n                  key={index}\r\n                >\r\n                  {name} {unreadMessages.get(name) ? `(${unreadMessages.get(name)}) Nuevo Mensaje` : ''}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown}\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"re\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          <div className=\"register\">\r\n            <input\r\n              id=\"user-name\"\r\n              placeholder=\"Ingresa tu nombre\"\r\n              name=\"userName\"\r\n              value={userData.username}\r\n              onChange={handleUsername}\r\n              margin=\"normal\"\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"button\" id=\"btn-registro\" onClick={registerUser}>\r\n            Entrar\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;\r\n \r\n/*\r\n\r\nimport React from 'react';\r\nimport '../index.css';\r\n\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser,\r\n  loginUser,\r\n  unreadMessages,\r\n  isRegistering,\r\n  setIsRegistering,\r\n}) => {\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n      tab === \"CHATROOM\" ? sendValue() : sendPrivateValue();\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li \r\n                onClick={() => setTab(\"CHATROOM\")} \r\n                className={`member ${tab === \"CHATROOM\" && \"active\"}`}\r\n              >\r\n                CHAT4FUN\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li \r\n                  onClick={() => setTab(name)} \r\n                  className={`member ${tab === name && \"active\"} ${unreadMessages.get(name) ? \"unread\" : \"\"}`} \r\n                  key={index}\r\n                >\r\n                  {name} {unreadMessages.get(name) ? `(${unreadMessages.get(name)}) Nuevo Mensaje` : ''}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown}\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"register\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          {isRegistering ? (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Usuario\"\r\n                name=\"username\"\r\n                value={userData.username}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"password\"\r\n                value={userData.password}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                value={userData.email}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <button type=\"button\" onClick={registerUser}>Registrarse</button>\r\n              <p>¿Ya tienes una cuenta? <span onClick={() => setIsRegistering(false)}>Iniciar sesión</span></p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Usuario\"\r\n                name=\"username\"\r\n                value={userData.username}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"password\"\r\n                value={userData.password}\r\n                onChange={handleUsername}\r\n                required\r\n              />\r\n              <button type=\"button\" onClick={loginUser}>Iniciar sesión</button>\r\n              <p>¿No tienes una cuenta? <span onClick={() => setIsRegistering(true)}>Registrarse</span></p>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;*/"]},"metadata":{},"sourceType":"module"}