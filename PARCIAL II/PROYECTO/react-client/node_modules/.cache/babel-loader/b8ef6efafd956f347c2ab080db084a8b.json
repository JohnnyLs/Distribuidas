{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\Distribuidas\\\\Distribuidas\\\\PARCIAL II\\\\PROYECTO\\\\react-client\\\\src\\\\components\\\\ChatRoomUI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatRoomUI = _ref => {\n  _s();\n\n  var _allUsers$find, _allUsers$find2;\n\n  let {\n    userData,\n    privateChats,\n    publicChats,\n    tab,\n    setTab,\n    handleMessage,\n    sendValue,\n    sendPrivateValue,\n    handleUsername,\n    registerUser,\n    loginUser,\n    unreadMessages,\n    isRegistering,\n    setIsRegistering,\n    allUsers,\n    searchQuery,\n    setSearchQuery,\n    searchUsers,\n    logoutUser,\n    act\n  } = _ref;\n  const [filteredUsers, setFilteredUsers] = useState(allUsers);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (searchQuery === \"\") {\n      setFilteredUsers(allUsers);\n    } else {\n      setFilteredUsers(allUsers.filter(user => user.username.toLowerCase().includes(searchQuery.toLowerCase())));\n    }\n  }, [searchQuery, allUsers]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [publicChats, privateChats, tab]);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n\n      if (tab === \"CHATROOM\") {\n        if (userData.message.trim()) {\n          sendValue();\n        }\n      } else {\n        if (userData.message.trim()) {\n          sendPrivateValue();\n        }\n      }\n    }\n  };\n\n  const handleSendClick = () => {\n    if (userData.message.trim()) {\n      tab === \"CHATROOM\" ? sendValue() : sendPrivateValue();\n    }\n  };\n\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const getUserStatusIndicator = user => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `status-indicator ${user.online ? \"online\" : \"offline\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getUserStatusClass = user => {\n    return user.online ? \"online\" : \"offline\";\n  };\n\n  const currentUser = allUsers.find(user => user.username === userData.username);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Buscar usuarios\",\n            value: searchQuery,\n            onChange: handleSearchChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: searchUsers,\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setTab(\"CHATROOM\"),\n            className: `member ${tab === \"CHATROOM\" ? \"active\" : \"\"} ${unreadMessages.get(\"CHATROOM\") ? \"unread\" : \"\"}`,\n            children: [\"CHATROOM\", unreadMessages.get(\"CHATROOM\") ? `(${unreadMessages.get(\"CHATROOM\")}) Nuevo mensaje de ${unreadMessages.get(\"CHATROOM\").senderName}` : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), filteredUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setTab(user.username),\n            className: `member ${tab === user.username ? \"active\" : \"\"} ${user.username === userData.username ? \"current-user\" : \"\"} ${unreadMessages.get(user.username) ? \"unread\" : \"\"} ${getUserStatusClass(user)}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-indicator ${user.isConnected ? \"online\" : \"offline\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), user.username, unreadMessages.get(user.username) ? `(${unreadMessages.get(user.username)}) Nuevo Mensaje` : \"\", user.username === userData.username && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"current-user-indicator\",\n              children: \"(T\\xFA)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"chat-header\",\n          children: [tab === \"CHATROOM\" ? \"CHATROOM\" : `Chat con ${tab}`, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"last-connection\",\n              children: (_allUsers$find = allUsers.find(user => user.username === tab)) !== null && _allUsers$find !== void 0 && _allUsers$find.lastActive ? `Última conexión: ${new Date((_allUsers$find2 = allUsers.find(user => user.username === tab)) === null || _allUsers$find2 === void 0 ? void 0 : _allUsers$find2.lastActive).toLocaleString()}` : \"ACTIVO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: [(tab === \"CHATROOM\" ? publicChats : privateChats.get(tab) || []).map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username ? \"self\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sender-name\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"Escribe un mensaje\",\n            value: userData.message,\n            onChange: handleMessage,\n            onKeyDown: handleKeyDown,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: handleSendClick,\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contenedor\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: () => {\n            logoutUser();\n            act(userData.username);\n          },\n          children: \"Cerrar sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `auth-form ${isRegistering ? \"register-form\" : \"login-form\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isRegistering ? \"Registro\" : \"Inicio de sesión\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), userData.errors && Object.keys(userData.errors).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-messages\",\n        children: Object.values(userData.errors).map((error, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this), isRegistering ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Usuario\",\n          name: \"username\",\n          value: userData.username,\n          onChange: handleUsername,\n          required: true,\n          className: \"auth-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Contrase\\xF1a\",\n          name: \"password\",\n          value: userData.password,\n          onChange: handleUsername,\n          required: true,\n          className: \"auth-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          name: \"email\",\n          value: userData.email,\n          onChange: handleUsername,\n          required: true,\n          className: \"auth-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: registerUser,\n          className: \"auth-button\",\n          children: \"Registrarse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xBFYa tienes una cuenta?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setIsRegistering(false),\n            children: \"Iniciar sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Usuario\",\n          name: \"username\",\n          value: userData.username,\n          onChange: handleUsername,\n          required: true,\n          className: \"auth-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Contrase\\xF1a\",\n          name: \"password\",\n          value: userData.password,\n          onChange: handleUsername,\n          required: true,\n          className: \"auth-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: loginUser,\n          className: \"auth-button\",\n          children: \"Iniciar sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xBFNo tienes una cuenta?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setIsRegistering(true),\n            children: \"Registrarse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatRoomUI, \"YA8OpzQeQBIzote1I5L6aQiH/oQ=\");\n\n_c = ChatRoomUI;\nexport default ChatRoomUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoomUI\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/Distribuidas/Distribuidas/PARCIAL II/PROYECTO/react-client/src/components/ChatRoomUI.js"],"names":["React","useEffect","useRef","useState","ChatRoomUI","userData","privateChats","publicChats","tab","setTab","handleMessage","sendValue","sendPrivateValue","handleUsername","registerUser","loginUser","unreadMessages","isRegistering","setIsRegistering","allUsers","searchQuery","setSearchQuery","searchUsers","logoutUser","act","filteredUsers","setFilteredUsers","messagesEndRef","filter","user","username","toLowerCase","includes","scrollToBottom","current","scrollIntoView","behavior","handleKeyDown","event","key","preventDefault","message","trim","handleSendClick","handleSearchChange","target","value","getUserStatusIndicator","online","getUserStatusClass","currentUser","find","connected","get","senderName","map","index","isConnected","lastActive","Date","toLocaleString","chat","errors","Object","keys","length","values","error","password","email"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"../index.css\";\r\n\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser,\r\n  loginUser,\r\n  unreadMessages,\r\n  isRegistering,\r\n  setIsRegistering,\r\n  allUsers,\r\n  searchQuery,\r\n  setSearchQuery,\r\n  searchUsers,\r\n  logoutUser,\r\n  act,\r\n}) => {\r\n  const [filteredUsers, setFilteredUsers] = useState(allUsers);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (searchQuery === \"\") {\r\n      setFilteredUsers(allUsers);\r\n    } else {\r\n      setFilteredUsers(\r\n        allUsers.filter((user) =>\r\n          user.username.toLowerCase().includes(searchQuery.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n  }, [searchQuery, allUsers]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [publicChats, privateChats, tab]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      if (tab === \"CHATROOM\") {\r\n        if (userData.message.trim()) {\r\n          sendValue();\r\n        }\r\n      } else {\r\n        if (userData.message.trim()) {\r\n          sendPrivateValue();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSendClick = () => {\r\n    if (userData.message.trim()) {\r\n      tab === \"CHATROOM\" ? sendValue() : sendPrivateValue();\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const getUserStatusIndicator = (user) => {\r\n    return (\r\n      <span\r\n        className={`status-indicator ${user.online ? \"online\" : \"offline\"}`}\r\n      ></span>\r\n    );\r\n  };\r\n  const getUserStatusClass = (user) => {\r\n    return user.online ? \"online\" : \"offline\";\r\n  };\r\n\r\n  const currentUser = allUsers.find(\r\n    (user) => user.username === userData.username\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <div className=\"search-bar\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Buscar usuarios\"\r\n                value={searchQuery}\r\n                onChange={handleSearchChange}\r\n              />\r\n              <button onClick={searchUsers}>Buscar</button>\r\n            </div>\r\n\r\n            <ul>\r\n              <li\r\n                onClick={() => setTab(\"CHATROOM\")}\r\n                className={`member ${tab === \"CHATROOM\" ? \"active\" : \"\"} ${\r\n                  unreadMessages.get(\"CHATROOM\") ? \"unread\" : \"\"\r\n                }`}\r\n              >\r\n                CHATROOM\r\n                {unreadMessages.get(\"CHATROOM\")\r\n                  ? `(${unreadMessages.get(\"CHATROOM\")}) Nuevo mensaje de ${\r\n                      unreadMessages.get(\"CHATROOM\").senderName\r\n                    }`\r\n                  : \"\"}\r\n              </li>\r\n              {filteredUsers.map((user, index) => (\r\n                <li\r\n                  onClick={() => setTab(user.username)}\r\n                  className={`member ${tab === user.username ? \"active\" : \"\"} ${\r\n                    user.username === userData.username ? \"current-user\" : \"\"\r\n                  } ${\r\n                    unreadMessages.get(user.username) ? \"unread\" : \"\"\r\n                  } ${getUserStatusClass(user)}`}\r\n                  key={index}\r\n                >\r\n                  <span\r\n                    className={`status-indicator ${\r\n                      user.isConnected ? \"online\" : \"offline\"\r\n                    }`}\r\n                  ></span>\r\n\r\n                  {user.username}\r\n                  {unreadMessages.get(user.username)\r\n                    ? `(${unreadMessages.get(user.username)}) Nuevo Mensaje`\r\n                    : \"\"}\r\n                  {user.username === userData.username && (\r\n                    <span className=\"current-user-indicator\">(Tú)</span>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"chat-content\">\r\n            <header className=\"chat-header\">\r\n              {tab === \"CHATROOM\" ? \"CHATROOM\" : `Chat con ${tab}`}\r\n              <div className=\"chat-header\">\r\n                <span className=\"last-connection\">\r\n                  {allUsers.find((user) => user.username === tab)?.lastActive\r\n                    ? `Última conexión: ${new Date(\r\n                        allUsers.find(\r\n                          (user) => user.username === tab\r\n                        )?.lastActive\r\n                      ).toLocaleString()}`\r\n                    : \"ACTIVO\"}\r\n                </span>\r\n              </div>\r\n            </header>\r\n\r\n            <ul className=\"chat-messages\">\r\n              {(tab === \"CHATROOM\"\r\n                ? publicChats\r\n                : privateChats.get(tab) || []\r\n              ).map((chat, index) => (\r\n                <li\r\n                  className={`message ${\r\n                    chat.senderName === userData.username ? \"self\" : \"\"\r\n                  }`}\r\n                  key={index}\r\n                >\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n              <div ref={messagesEndRef} />\r\n            </ul>\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown}\r\n                required\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"send-button\"\r\n                onClick={handleSendClick}\r\n              >\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"contenedor\">\r\n            <button\r\n              className=\"logout-button\"\r\n              onClick={() => {\r\n                logoutUser();\r\n                act(userData.username);\r\n              }}\r\n            >\r\n              Cerrar sesión\r\n            </button>{\" \"}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={`auth-form ${\r\n            isRegistering ? \"register-form\" : \"login-form\"\r\n          }`}\r\n        >\r\n          <h1>{isRegistering ? \"Registro\" : \"Inicio de sesión\"}</h1>\r\n          {userData.errors && Object.keys(userData.errors).length > 0 && (\r\n            <div className=\"error-messages\">\r\n              {Object.values(userData.errors).map((error, index) => (\r\n                <p key={index} className=\"error\">\r\n                  {error}\r\n                </p>\r\n              ))}\r\n            </div>\r\n          )}\r\n          {isRegistering ? (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Usuario\"\r\n                name=\"username\"\r\n                value={userData.username}\r\n                onChange={handleUsername}\r\n                required\r\n                className=\"auth-input\"\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"password\"\r\n                value={userData.password}\r\n                onChange={handleUsername}\r\n                required\r\n                className=\"auth-input\"\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                value={userData.email}\r\n                onChange={handleUsername}\r\n                required\r\n                className=\"auth-input\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={registerUser}\r\n                className=\"auth-button\"\r\n              >\r\n                Registrarse\r\n              </button>\r\n              <p>\r\n                ¿Ya tienes una cuenta?{\" \"}\r\n                <span onClick={() => setIsRegistering(false)}>\r\n                  Iniciar sesión\r\n                </span>\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Usuario\"\r\n                name=\"username\"\r\n                value={userData.username}\r\n                onChange={handleUsername}\r\n                required\r\n                className=\"auth-input\"\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"password\"\r\n                value={userData.password}\r\n                onChange={handleUsername}\r\n                required\r\n                className=\"auth-input\"\r\n              />\r\n              <button type=\"button\" onClick={loginUser} className=\"auth-button\">\r\n                Iniciar sesión\r\n              </button>\r\n              <p>\r\n                ¿No tienes una cuenta?{\" \"}\r\n                <span onClick={() => setIsRegistering(true)}>Registrarse</span>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoomUI;\r\n"]},"metadata":{},"sourceType":"module"}