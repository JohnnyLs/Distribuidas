{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\Distribuidas\\\\Distribuidas\\\\PARCIAL II\\\\PROYECTO\\\\react-client\\\\src\\\\components\\\\ChatRoomUI.js\";\nimport React from 'react';\nimport '../index.css';\n/*\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser\r\n}) => {\r\n  // Maneja el evento de teclado\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n        sendValue(); \r\n      } else {\r\n        sendPrivateValue(); \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li onClick={() => { setTab(\"CHATROOM\") }} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>CHAT4FUN</li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li onClick={() => { setTab(name) }} className={`member ${tab === name && \"active\"}`} key={index}>{name}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} // Asocia el evento de teclado\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"re\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          <div className=\"register\">\r\n            <input\r\n              id=\"user-name\"\r\n              placeholder=\"Ingresa tu nombre\"\r\n              name=\"userName\"\r\n              value={userData.username}\r\n              onChange={handleUsername}\r\n              margin=\"normal\"\r\n              \r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"button\" id=\"btn-registro\" onClick={registerUser} >\r\n            Entrar\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatRoomUI = _ref => {\n  let {\n    userData,\n    privateChats,\n    publicChats,\n    tab,\n    setTab,\n    handleMessage,\n    sendValue,\n    sendPrivateValue,\n    handleUsername,\n    registerUser,\n    newMessagesCount,\n    handleTabChange\n  } = _ref;\n\n  // Maneja el evento de teclado\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      if (tab === \"CHATROOM\") {\n        sendValue();\n      } else {\n        sendPrivateValue();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              handleTabChange(\"CHATROOM\");\n            },\n            className: `member ${tab === \"CHATROOM\" && \"active\"}`,\n            children: \"CHAT4FUN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 27\n          }, this), [...privateChats.keys()].map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              handleTabChange(name);\n            },\n            className: `member ${tab === name && \"active\"}`,\n            children: [name, \" \", newMessagesCount.get(name) > 0 && `(${newMessagesCount.get(name)})`]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 31\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }, this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username ? \"self\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sender-name\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 35\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"Escribe un mensaje\",\n            value: userData.message,\n            onChange: handleMessage,\n            onKeyDown: handleKeyDown,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 42\n      }, this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: [...privateChats.get(tab)].map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username ? \"self\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sender-name\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 35\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"Escribe un mensaje\",\n            value: userData.message,\n            onChange: handleMessage,\n            onKeyDown: handleKeyDown // Asocia el evento de teclado\n            ,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"re\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bienvenido a CHAT4FUN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"user-name\",\n          placeholder: \"Ingresa tu nombre\",\n          name: \"userName\",\n          value: userData.username,\n          onChange: handleUsername,\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"btn-registro\",\n        onClick: registerUser,\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 7\n  }, this);\n};\n\n_c = ChatRoomUI;\nexport default ChatRoomUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoomUI\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/Distribuidas/Distribuidas/PARCIAL II/PROYECTO/react-client/src/components/ChatRoomUI.js"],"names":["React","ChatRoomUI","userData","privateChats","publicChats","tab","setTab","handleMessage","sendValue","sendPrivateValue","handleUsername","registerUser","newMessagesCount","handleTabChange","handleKeyDown","event","key","preventDefault","connected","keys","map","name","index","get","chat","senderName","username","message"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../index.css';\r\n/*\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser\r\n}) => {\r\n  // Maneja el evento de teclado\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); \r\n        sendValue(); \r\n      } else {\r\n        sendPrivateValue(); \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li onClick={() => { setTab(\"CHATROOM\") }} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>CHAT4FUN</li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li onClick={() => { setTab(name) }} className={`member ${tab === name && \"active\"}`} key={index}>{name}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {publicChats.map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} \r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n          {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n            <ul className=\"chat-messages\">\r\n              {[...privateChats.get(tab)].map((chat, index) => (\r\n                <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                  <div className=\"message-data\">{chat.message}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"send-message\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-message\"\r\n                placeholder=\"Escribe un mensaje\"\r\n                value={userData.message}\r\n                onChange={handleMessage}\r\n                onKeyDown={handleKeyDown} // Asocia el evento de teclado\r\n                required\r\n              />\r\n              <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n      ) : (\r\n        <div className=\"re\">\r\n          <h1>Bienvenido a CHAT4FUN</h1>\r\n          <div className=\"register\">\r\n            <input\r\n              id=\"user-name\"\r\n              placeholder=\"Ingresa tu nombre\"\r\n              name=\"userName\"\r\n              value={userData.username}\r\n              onChange={handleUsername}\r\n              margin=\"normal\"\r\n              \r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"button\" id=\"btn-registro\" onClick={registerUser} >\r\n            Entrar\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomUI;\r\n*/\r\n\r\nconst ChatRoomUI = ({\r\n  userData,\r\n  privateChats,\r\n  publicChats,\r\n  tab,\r\n  setTab,\r\n  handleMessage,\r\n  sendValue,\r\n  sendPrivateValue,\r\n  handleUsername,\r\n  registerUser,\r\n  newMessagesCount,\r\n  handleTabChange\r\n}) => {\r\n  // Maneja el evento de teclado\r\n  const handleKeyDown = (event) => {\r\n      if (event.key === 'Enter') {\r\n          event.preventDefault(); \r\n          if (tab === \"CHATROOM\") {\r\n              sendValue();\r\n          } else {\r\n              sendPrivateValue();\r\n          }\r\n      }\r\n  };\r\n\r\n  return (\r\n      <div className=\"container\">\r\n          {userData.connected ? (\r\n              <div className=\"chat-box\">\r\n                  <div className=\"member-list\">\r\n                      <ul>\r\n                          <li onClick={() => { handleTabChange(\"CHATROOM\") }} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>CHAT4FUN</li>\r\n                          {[...privateChats.keys()].map((name, index) => (\r\n                              <li onClick={() => { handleTabChange(name) }} className={`member ${tab === name && \"active\"}`} key={index}>\r\n                                  {name} {newMessagesCount.get(name) > 0 && `(${newMessagesCount.get(name)})`}\r\n                              </li>\r\n                          ))}\r\n                      </ul>\r\n                  </div>\r\n                  {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n                      <ul className=\"chat-messages\">\r\n                          {publicChats.map((chat, index) => (\r\n                              <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                                  <div className=\"message-data\">{chat.message}</div>\r\n                              </li>\r\n                          ))}\r\n                      </ul>\r\n\r\n                      <div className=\"send-message\">\r\n                          <input\r\n                              type=\"text\"\r\n                              className=\"input-message\"\r\n                              placeholder=\"Escribe un mensaje\"\r\n                              value={userData.message}\r\n                              onChange={handleMessage}\r\n                              onKeyDown={handleKeyDown} \r\n                              required\r\n                          />\r\n                          <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\r\n                      </div>\r\n                  </div>}\r\n                  {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n                      <ul className=\"chat-messages\">\r\n                          {[...privateChats.get(tab)].map((chat, index) => (\r\n                              <li className={`message ${chat.senderName === userData.username ? \"self\" : \"\"}`} key={index}>\r\n                                  <div className=\"sender-name\">{chat.senderName}</div>\r\n                                  <div className=\"message-data\">{chat.message}</div>\r\n                              </li>\r\n                          ))}\r\n                      </ul>\r\n\r\n                      <div className=\"send-message\">\r\n                          <input\r\n                              type=\"text\"\r\n                              className=\"input-message\"\r\n                              placeholder=\"Escribe un mensaje\"\r\n                              value={userData.message}\r\n                              onChange={handleMessage}\r\n                              onKeyDown={handleKeyDown} // Asocia el evento de teclado\r\n                              required\r\n                          />\r\n                          <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\r\n                      </div>\r\n                  </div>}\r\n              </div>\r\n          ) : (\r\n              <div className=\"re\">\r\n                  <h1>Bienvenido a CHAT4FUN</h1>\r\n                  <div className=\"register\">\r\n                      <input\r\n                          id=\"user-name\"\r\n                          placeholder=\"Ingresa tu nombre\"\r\n                          name=\"userName\"\r\n                          value={userData.username}\r\n                          onChange={handleUsername}\r\n                          margin=\"normal\"\r\n                          required\r\n                      />\r\n                  </div>\r\n                  <button type=\"button\" id=\"btn-registro\" onClick={registerUser}>\r\n                      Entrar\r\n                  </button>\r\n              </div>\r\n          )}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoomUI;\r\n"]},"metadata":{},"sourceType":"module"}